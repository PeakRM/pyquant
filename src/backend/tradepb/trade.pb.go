// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v5.29.0
// source: tradepb/trade.proto

package tradepb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The Trade message
type Trade struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StrategyName string `protobuf:"bytes,1,opt,name=strategy_name,json=strategyName,proto3" json:"strategy_name,omitempty"`
	ContractId   int32  `protobuf:"varint,2,opt,name=contract_id,json=contractId,proto3" json:"contract_id,omitempty"`
	Exchange     string `protobuf:"bytes,3,opt,name=exchange,proto3" json:"exchange,omitempty"`
	Symbol       string `protobuf:"bytes,4,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Side         string `protobuf:"bytes,5,opt,name=side,proto3" json:"side,omitempty"`                            // BUY, SELL, HOLD
	Quantity     string `protobuf:"bytes,6,opt,name=quantity,proto3" json:"quantity,omitempty"`                    // Serialize as a string for flexibility
	OrderType    string `protobuf:"bytes,7,opt,name=order_type,json=orderType,proto3" json:"order_type,omitempty"` // MKT, LMT
	Broker       string `protobuf:"bytes,8,opt,name=broker,proto3" json:"broker,omitempty"`                        // IB, TDA, etc.
	Price        string `protobuf:"bytes,9,opt,name=price,proto3" json:"price,omitempty"`                          // Optional price for limit orders
}

func (x *Trade) Reset() {
	*x = Trade{}
	mi := &file_tradepb_trade_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Trade) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Trade) ProtoMessage() {}

func (x *Trade) ProtoReflect() protoreflect.Message {
	mi := &file_tradepb_trade_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Trade.ProtoReflect.Descriptor instead.
func (*Trade) Descriptor() ([]byte, []int) {
	return file_tradepb_trade_proto_rawDescGZIP(), []int{0}
}

func (x *Trade) GetStrategyName() string {
	if x != nil {
		return x.StrategyName
	}
	return ""
}

func (x *Trade) GetContractId() int32 {
	if x != nil {
		return x.ContractId
	}
	return 0
}

func (x *Trade) GetExchange() string {
	if x != nil {
		return x.Exchange
	}
	return ""
}

func (x *Trade) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *Trade) GetSide() string {
	if x != nil {
		return x.Side
	}
	return ""
}

func (x *Trade) GetQuantity() string {
	if x != nil {
		return x.Quantity
	}
	return ""
}

func (x *Trade) GetOrderType() string {
	if x != nil {
		return x.OrderType
	}
	return ""
}

func (x *Trade) GetBroker() string {
	if x != nil {
		return x.Broker
	}
	return ""
}

func (x *Trade) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

// The response message
type TradeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *TradeResponse) Reset() {
	*x = TradeResponse{}
	mi := &file_tradepb_trade_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TradeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradeResponse) ProtoMessage() {}

func (x *TradeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tradepb_trade_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradeResponse.ProtoReflect.Descriptor instead.
func (*TradeResponse) Descriptor() ([]byte, []int) {
	return file_tradepb_trade_proto_rawDescGZIP(), []int{1}
}

func (x *TradeResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

var File_tradepb_trade_proto protoreflect.FileDescriptor

var file_tradepb_trade_proto_rawDesc = []byte{
	0x0a, 0x13, 0x74, 0x72, 0x61, 0x64, 0x65, 0x70, 0x62, 0x2f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x74, 0x72, 0x61, 0x64, 0x65, 0x22, 0xfe, 0x01, 0x0a,
	0x05, 0x54, 0x72, 0x61, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65,
	0x67, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x73, 0x69, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x22, 0x27, 0x0a,
	0x0d, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x32, 0x3f, 0x0a, 0x0c, 0x54, 0x72, 0x61, 0x64, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x2f, 0x0a, 0x09, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x72,
	0x61, 0x64, 0x65, 0x12, 0x0c, 0x2e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x2e, 0x54, 0x72, 0x61, 0x64,
	0x65, 0x1a, 0x14, 0x2e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x11, 0x5a, 0x0f, 0x62, 0x61, 0x63, 0x6b, 0x65,
	0x6e, 0x64, 0x2f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_tradepb_trade_proto_rawDescOnce sync.Once
	file_tradepb_trade_proto_rawDescData = file_tradepb_trade_proto_rawDesc
)

func file_tradepb_trade_proto_rawDescGZIP() []byte {
	file_tradepb_trade_proto_rawDescOnce.Do(func() {
		file_tradepb_trade_proto_rawDescData = protoimpl.X.CompressGZIP(file_tradepb_trade_proto_rawDescData)
	})
	return file_tradepb_trade_proto_rawDescData
}

var file_tradepb_trade_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_tradepb_trade_proto_goTypes = []any{
	(*Trade)(nil),         // 0: trade.Trade
	(*TradeResponse)(nil), // 1: trade.TradeResponse
}
var file_tradepb_trade_proto_depIdxs = []int32{
	0, // 0: trade.TradeService.SendTrade:input_type -> trade.Trade
	1, // 1: trade.TradeService.SendTrade:output_type -> trade.TradeResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_tradepb_trade_proto_init() }
func file_tradepb_trade_proto_init() {
	if File_tradepb_trade_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tradepb_trade_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_tradepb_trade_proto_goTypes,
		DependencyIndexes: file_tradepb_trade_proto_depIdxs,
		MessageInfos:      file_tradepb_trade_proto_msgTypes,
	}.Build()
	File_tradepb_trade_proto = out.File
	file_tradepb_trade_proto_rawDesc = nil
	file_tradepb_trade_proto_goTypes = nil
	file_tradepb_trade_proto_depIdxs = nil
}
